syntax = "proto3";
option go_package = "github.com/LENSHOOD/go-raft/api";
package api;

service RaftRpc {
  rpc RequestVote(RequestVoteArguments) returns (RequestVoteResults);
  rpc AppendEntries(AppendEntriesArguments) returns (AppendEntriesResults);

  rpc ExecCmd(CmdRequest) returns (CmdResponse);
}

// inner rpc
message RequestVoteArguments {
  int64 term = 1;
  int64 candidate_id = 2;
  int64 last_log_index = 3;
  int64 last_log_term = 4;
}

message RequestVoteResults {
  int64 term = 1;
  bool vote_granted = 2;
}

message Entry {
  int64 term = 1;
  int64 idx = 2;
  string cmd = 3;
}

message AppendEntriesArguments {
  int64 term = 1;
  int64 leader_id = 2;
  int64 prev_log_index = 3;
  int64 prev_log_term = 4;
  repeated Entry entries = 5;
  int64 leader_commit = 6;
}

message AppendEntriesResults {
  int64 term = 1;
  bool success = 2;
}

// client command
message CmdRequest {
  string cmd = 1;
}

message CmdResponse {
  string result = 1;
  bool success = 2;
}